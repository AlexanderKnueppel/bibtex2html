/*
* generated by Xtext
*/
grammar InternalBibTeX;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package de.tubs.bibtextohtml.bibtex.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.tubs.bibtextohtml.bibtex.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.tubs.bibtextohtml.bibtex.services.BibTeXGrammarAccess;

}

@parser::members {
 
 	private BibTeXGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(BibTeXGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getBibtexEntriesAssignment()); }
(rule__Model__BibtexEntriesAssignment)*
{ after(grammarAccess.getModelAccess().getBibtexEntriesAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBibtexEntryTypes
entryRuleBibtexEntryTypes 
:
{ before(grammarAccess.getBibtexEntryTypesRule()); }
	 ruleBibtexEntryTypes
{ after(grammarAccess.getBibtexEntryTypesRule()); } 
	 EOF 
;

// Rule BibtexEntryTypes
ruleBibtexEntryTypes
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBibtexEntryTypesAccess().getArticleParserRuleCall()); }
	ruleArticle
{ after(grammarAccess.getBibtexEntryTypesAccess().getArticleParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArticle
entryRuleArticle 
:
{ before(grammarAccess.getArticleRule()); }
	 ruleArticle
{ after(grammarAccess.getArticleRule()); } 
	 EOF 
;

// Rule Article
ruleArticle
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArticleAccess().getUnorderedGroup()); }
(rule__Article__UnorderedGroup)
{ after(grammarAccess.getArticleAccess().getUnorderedGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCiteKey
entryRuleCiteKey 
:
{ before(grammarAccess.getCiteKeyRule()); }
	 ruleCiteKey
{ after(grammarAccess.getCiteKeyRule()); } 
	 EOF 
;

// Rule CiteKey
ruleCiteKey
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCiteKeyAccess().getKeyAssignment()); }
(rule__CiteKey__KeyAssignment)
{ after(grammarAccess.getCiteKeyAccess().getKeyAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAuthorField
entryRuleAuthorField 
:
{ before(grammarAccess.getAuthorFieldRule()); }
	 ruleAuthorField
{ after(grammarAccess.getAuthorFieldRule()); } 
	 EOF 
;

// Rule AuthorField
ruleAuthorField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAuthorFieldAccess().getGroup()); }
(rule__AuthorField__Group__0)
{ after(grammarAccess.getAuthorFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAuthors
entryRuleAuthors 
:
{ before(grammarAccess.getAuthorsRule()); }
	 ruleAuthors
{ after(grammarAccess.getAuthorsRule()); } 
	 EOF 
;

// Rule Authors
ruleAuthors
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAuthorsAccess().getGroup()); }
(rule__Authors__Group__0)
{ after(grammarAccess.getAuthorsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFullname
entryRuleFullname 
:
{ before(grammarAccess.getFullnameRule()); }
	 ruleFullname
{ after(grammarAccess.getFullnameRule()); } 
	 EOF 
;

// Rule Fullname
ruleFullname
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFullnameAccess().getAlternatives()); }
(rule__Fullname__Alternatives)
{ after(grammarAccess.getFullnameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTitleField
entryRuleTitleField 
:
{ before(grammarAccess.getTitleFieldRule()); }
	 ruleTitleField
{ after(grammarAccess.getTitleFieldRule()); } 
	 EOF 
;

// Rule TitleField
ruleTitleField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTitleFieldAccess().getGroup()); }
(rule__TitleField__Group__0)
{ after(grammarAccess.getTitleFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJournalField
entryRuleJournalField 
:
{ before(grammarAccess.getJournalFieldRule()); }
	 ruleJournalField
{ after(grammarAccess.getJournalFieldRule()); } 
	 EOF 
;

// Rule JournalField
ruleJournalField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJournalFieldAccess().getGroup()); }
(rule__JournalField__Group__0)
{ after(grammarAccess.getJournalFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleYearField
entryRuleYearField 
:
{ before(grammarAccess.getYearFieldRule()); }
	 ruleYearField
{ after(grammarAccess.getYearFieldRule()); } 
	 EOF 
;

// Rule YearField
ruleYearField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getYearFieldAccess().getGroup()); }
(rule__YearField__Group__0)
{ after(grammarAccess.getYearFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVolumeField
entryRuleVolumeField 
:
{ before(grammarAccess.getVolumeFieldRule()); }
	 ruleVolumeField
{ after(grammarAccess.getVolumeFieldRule()); } 
	 EOF 
;

// Rule VolumeField
ruleVolumeField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVolumeFieldAccess().getGroup()); }
(rule__VolumeField__Group__0)
{ after(grammarAccess.getVolumeFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumberField
entryRuleNumberField 
:
{ before(grammarAccess.getNumberFieldRule()); }
	 ruleNumberField
{ after(grammarAccess.getNumberFieldRule()); } 
	 EOF 
;

// Rule NumberField
ruleNumberField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberFieldAccess().getGroup()); }
(rule__NumberField__Group__0)
{ after(grammarAccess.getNumberFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePagesField
entryRulePagesField 
:
{ before(grammarAccess.getPagesFieldRule()); }
	 rulePagesField
{ after(grammarAccess.getPagesFieldRule()); } 
	 EOF 
;

// Rule PagesField
rulePagesField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPagesFieldAccess().getGroup()); }
(rule__PagesField__Group__0)
{ after(grammarAccess.getPagesFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMonthField
entryRuleMonthField 
:
{ before(grammarAccess.getMonthFieldRule()); }
	 ruleMonthField
{ after(grammarAccess.getMonthFieldRule()); } 
	 EOF 
;

// Rule MonthField
ruleMonthField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMonthFieldAccess().getGroup()); }
(rule__MonthField__Group__0)
{ after(grammarAccess.getMonthFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNoteField
entryRuleNoteField 
:
{ before(grammarAccess.getNoteFieldRule()); }
	 ruleNoteField
{ after(grammarAccess.getNoteFieldRule()); } 
	 EOF 
;

// Rule NoteField
ruleNoteField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNoteFieldAccess().getGroup()); }
(rule__NoteField__Group__0)
{ after(grammarAccess.getNoteFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Article__Alternatives_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getARTICLEKeyword_0_1_0()); }

	'ARTICLE' 

{ after(grammarAccess.getArticleAccess().getARTICLEKeyword_0_1_0()); }
)

    |(
{ before(grammarAccess.getArticleAccess().getArticleKeyword_0_1_1()); }

	'Article' 

{ after(grammarAccess.getArticleAccess().getArticleKeyword_0_1_1()); }
)

    |(
{ before(grammarAccess.getArticleAccess().getArticleKeyword_0_1_2()); }

	'article' 

{ after(grammarAccess.getArticleAccess().getArticleKeyword_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AuthorField__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuthorFieldAccess().getGroup_1_0()); }
(rule__AuthorField__Group_1_0__0)
{ after(grammarAccess.getAuthorFieldAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getAuthorFieldAccess().getGroup_1_1()); }
(rule__AuthorField__Group_1_1__0)
{ after(grammarAccess.getAuthorFieldAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Fullname__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullnameAccess().getGroup_0()); }
(rule__Fullname__Group_0__0)
{ after(grammarAccess.getFullnameAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFullnameAccess().getGroup_1()); }
(rule__Fullname__Group_1__0)
{ after(grammarAccess.getFullnameAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getFullnameAccess().getFirstnameAssignment_2()); }
(rule__Fullname__FirstnameAssignment_2)
{ after(grammarAccess.getFullnameAccess().getFirstnameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Article__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__Group_0__0__Impl
	rule__Article__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getCommercialAtKeyword_0_0()); }

	'@' 

{ after(grammarAccess.getArticleAccess().getCommercialAtKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Article__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__Group_0__1__Impl
	rule__Article__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getAlternatives_0_1()); }
(rule__Article__Alternatives_0_1)
{ after(grammarAccess.getArticleAccess().getAlternatives_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Article__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__Group_0__2__Impl
	rule__Article__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getLeftCurlyBracketKeyword_0_2()); }

	'{' 

{ after(grammarAccess.getArticleAccess().getLeftCurlyBracketKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Article__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__Group_0__3__Impl
	rule__Article__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getKeyAssignment_0_3()); }
(rule__Article__KeyAssignment_0_3)
{ after(grammarAccess.getArticleAccess().getKeyAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Article__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getGroup_0_4()); }
(rule__Article__Group_0_4__0)
{ after(grammarAccess.getArticleAccess().getGroup_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Article__Group_0_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__Group_0_4__0__Impl
	rule__Article__Group_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group_0_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getCommaKeyword_0_4_0()); }

	',' 

{ after(grammarAccess.getArticleAccess().getCommaKeyword_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Article__Group_0_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__Group_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group_0_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getAuthorAssignment_0_4_1()); }
(rule__Article__AuthorAssignment_0_4_1)
{ after(grammarAccess.getArticleAccess().getAuthorAssignment_0_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Article__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__Group_1__0__Impl
	rule__Article__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getArticleAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Article__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getTitleAssignment_1_1()); }
(rule__Article__TitleAssignment_1_1)
{ after(grammarAccess.getArticleAccess().getTitleAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Article__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__Group_2__0__Impl
	rule__Article__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getArticleAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Article__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getJournalAssignment_2_1()); }
(rule__Article__JournalAssignment_2_1)
{ after(grammarAccess.getArticleAccess().getJournalAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Article__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__Group_3__0__Impl
	rule__Article__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getArticleAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Article__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getYearAssignment_3_1()); }
(rule__Article__YearAssignment_3_1)
{ after(grammarAccess.getArticleAccess().getYearAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Article__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__Group_4__0__Impl
	rule__Article__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getArticleAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Article__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getVolumeAssignment_4_1()); }
(rule__Article__VolumeAssignment_4_1)
{ after(grammarAccess.getArticleAccess().getVolumeAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Article__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__Group_5__0__Impl
	rule__Article__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getArticleAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Article__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getNumberAssignment_5_1()); }
(rule__Article__NumberAssignment_5_1)
{ after(grammarAccess.getArticleAccess().getNumberAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Article__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__Group_6__0__Impl
	rule__Article__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getCommaKeyword_6_0()); }

	',' 

{ after(grammarAccess.getArticleAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Article__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getPagesAssignment_6_1()); }
(rule__Article__PagesAssignment_6_1)
{ after(grammarAccess.getArticleAccess().getPagesAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Article__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__Group_7__0__Impl
	rule__Article__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getCommaKeyword_7_0()); }

	',' 

{ after(grammarAccess.getArticleAccess().getCommaKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Article__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getMonthAssignment_7_1()); }
(rule__Article__MonthAssignment_7_1)
{ after(grammarAccess.getArticleAccess().getMonthAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Article__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__Group_8__0__Impl
	rule__Article__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getGroup_8_0()); }
(rule__Article__Group_8_0__0)?
{ after(grammarAccess.getArticleAccess().getGroup_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Article__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getRightCurlyBracketKeyword_8_1()); }

	'}' 

{ after(grammarAccess.getArticleAccess().getRightCurlyBracketKeyword_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Article__Group_8_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__Group_8_0__0__Impl
	rule__Article__Group_8_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group_8_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getCommaKeyword_8_0_0()); }

	',' 

{ after(grammarAccess.getArticleAccess().getCommaKeyword_8_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Article__Group_8_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__Group_8_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Article__Group_8_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getNoteAssignment_8_0_1()); }
(rule__Article__NoteAssignment_8_0_1)
{ after(grammarAccess.getArticleAccess().getNoteAssignment_8_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AuthorField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AuthorField__Group__0__Impl
	rule__AuthorField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AuthorField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuthorFieldAccess().getAuthorKeyword_0()); }

	'author = ' 

{ after(grammarAccess.getAuthorFieldAccess().getAuthorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AuthorField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AuthorField__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AuthorField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuthorFieldAccess().getAlternatives_1()); }
(rule__AuthorField__Alternatives_1)
{ after(grammarAccess.getAuthorFieldAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AuthorField__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AuthorField__Group_1_0__0__Impl
	rule__AuthorField__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AuthorField__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuthorFieldAccess().getQuotationMarkKeyword_1_0_0()); }

	'"' 

{ after(grammarAccess.getAuthorFieldAccess().getQuotationMarkKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AuthorField__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AuthorField__Group_1_0__1__Impl
	rule__AuthorField__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AuthorField__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuthorFieldAccess().getAuthorsParserRuleCall_1_0_1()); }
	ruleAuthors
{ after(grammarAccess.getAuthorFieldAccess().getAuthorsParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AuthorField__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AuthorField__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AuthorField__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuthorFieldAccess().getQuotationMarkKeyword_1_0_2()); }

	'"' 

{ after(grammarAccess.getAuthorFieldAccess().getQuotationMarkKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AuthorField__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AuthorField__Group_1_1__0__Impl
	rule__AuthorField__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AuthorField__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuthorFieldAccess().getLeftCurlyBracketKeyword_1_1_0()); }

	'{' 

{ after(grammarAccess.getAuthorFieldAccess().getLeftCurlyBracketKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AuthorField__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AuthorField__Group_1_1__1__Impl
	rule__AuthorField__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AuthorField__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuthorFieldAccess().getAuthorsParserRuleCall_1_1_1()); }
	ruleAuthors
{ after(grammarAccess.getAuthorFieldAccess().getAuthorsParserRuleCall_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AuthorField__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AuthorField__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AuthorField__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuthorFieldAccess().getRightCurlyBracketKeyword_1_1_2()); }

	'}' 

{ after(grammarAccess.getAuthorFieldAccess().getRightCurlyBracketKeyword_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Authors__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Authors__Group__0__Impl
	rule__Authors__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Authors__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuthorsAccess().getNamesAssignment_0()); }
(rule__Authors__NamesAssignment_0)
{ after(grammarAccess.getAuthorsAccess().getNamesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Authors__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Authors__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Authors__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuthorsAccess().getGroup_1()); }
(rule__Authors__Group_1__0)*
{ after(grammarAccess.getAuthorsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Authors__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Authors__Group_1__0__Impl
	rule__Authors__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Authors__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuthorsAccess().getAndKeyword_1_0()); }

	'and' 

{ after(grammarAccess.getAuthorsAccess().getAndKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Authors__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Authors__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Authors__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuthorsAccess().getNamesAssignment_1_1()); }
(rule__Authors__NamesAssignment_1_1)
{ after(grammarAccess.getAuthorsAccess().getNamesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Fullname__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fullname__Group_0__0__Impl
	rule__Fullname__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fullname__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullnameAccess().getLastnameAssignment_0_0()); }
(rule__Fullname__LastnameAssignment_0_0)
{ after(grammarAccess.getFullnameAccess().getLastnameAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fullname__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fullname__Group_0__1__Impl
	rule__Fullname__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Fullname__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullnameAccess().getCommaKeyword_0_1()); }

	',' 

{ after(grammarAccess.getFullnameAccess().getCommaKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fullname__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fullname__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fullname__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullnameAccess().getFirstnameAssignment_0_2()); }
(rule__Fullname__FirstnameAssignment_0_2)
{ after(grammarAccess.getFullnameAccess().getFirstnameAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Fullname__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fullname__Group_1__0__Impl
	rule__Fullname__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fullname__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullnameAccess().getFirstnameAssignment_1_0()); }
(rule__Fullname__FirstnameAssignment_1_0)
{ after(grammarAccess.getFullnameAccess().getFirstnameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fullname__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fullname__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fullname__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullnameAccess().getLastnameAssignment_1_1()); }
(rule__Fullname__LastnameAssignment_1_1)
{ after(grammarAccess.getFullnameAccess().getLastnameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TitleField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TitleField__Group__0__Impl
	rule__TitleField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TitleField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTitleFieldAccess().getTitleKeyword_0()); }

	'title = ' 

{ after(grammarAccess.getTitleFieldAccess().getTitleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TitleField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TitleField__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TitleField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTitleFieldAccess().getTitleAssignment_1()); }
(rule__TitleField__TitleAssignment_1)
{ after(grammarAccess.getTitleFieldAccess().getTitleAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__JournalField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JournalField__Group__0__Impl
	rule__JournalField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JournalField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJournalFieldAccess().getJournalKeyword_0()); }

	'journal = ' 

{ after(grammarAccess.getJournalFieldAccess().getJournalKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JournalField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JournalField__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JournalField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJournalFieldAccess().getJournalAssignment_1()); }
(rule__JournalField__JournalAssignment_1)
{ after(grammarAccess.getJournalFieldAccess().getJournalAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__YearField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__YearField__Group__0__Impl
	rule__YearField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__YearField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYearFieldAccess().getYearKeyword_0()); }

	'year = ' 

{ after(grammarAccess.getYearFieldAccess().getYearKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__YearField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__YearField__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__YearField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYearFieldAccess().getYearAssignment_1()); }
(rule__YearField__YearAssignment_1)
{ after(grammarAccess.getYearFieldAccess().getYearAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VolumeField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VolumeField__Group__0__Impl
	rule__VolumeField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VolumeField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVolumeFieldAccess().getVolumeKeyword_0()); }

	'volume = ' 

{ after(grammarAccess.getVolumeFieldAccess().getVolumeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VolumeField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VolumeField__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VolumeField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVolumeFieldAccess().getVolumeAssignment_1()); }
(rule__VolumeField__VolumeAssignment_1)
{ after(grammarAccess.getVolumeFieldAccess().getVolumeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NumberField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberField__Group__0__Impl
	rule__NumberField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberFieldAccess().getNumberKeyword_0()); }

	'number = ' 

{ after(grammarAccess.getNumberFieldAccess().getNumberKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumberField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberField__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberFieldAccess().getNumberAssignment_1()); }
(rule__NumberField__NumberAssignment_1)
{ after(grammarAccess.getNumberFieldAccess().getNumberAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PagesField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PagesField__Group__0__Impl
	rule__PagesField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PagesField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPagesFieldAccess().getPagesKeyword_0()); }

	'pages = ' 

{ after(grammarAccess.getPagesFieldAccess().getPagesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PagesField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PagesField__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PagesField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPagesFieldAccess().getPagesAssignment_1()); }
(rule__PagesField__PagesAssignment_1)
{ after(grammarAccess.getPagesFieldAccess().getPagesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MonthField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MonthField__Group__0__Impl
	rule__MonthField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MonthField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMonthFieldAccess().getMonthKeyword_0()); }

	'month = ' 

{ after(grammarAccess.getMonthFieldAccess().getMonthKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MonthField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MonthField__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MonthField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMonthFieldAccess().getMonthAssignment_1()); }
(rule__MonthField__MonthAssignment_1)
{ after(grammarAccess.getMonthFieldAccess().getMonthAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NoteField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NoteField__Group__0__Impl
	rule__NoteField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NoteField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteFieldAccess().getNoteKeyword_0()); }

	'note = ' 

{ after(grammarAccess.getNoteFieldAccess().getNoteKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NoteField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NoteField__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NoteField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteFieldAccess().getNoteAssignment_1()); }
(rule__NoteField__NoteAssignment_1)
{ after(grammarAccess.getNoteFieldAccess().getNoteAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Article__UnorderedGroup
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getArticleAccess().getUnorderedGroup());
    }
:
	rule__Article__UnorderedGroup__0
	
	{getUnorderedGroupHelper().canLeave(grammarAccess.getArticleAccess().getUnorderedGroup())}?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getArticleAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}


rule__Article__UnorderedGroup__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getArticleAccess().getUnorderedGroup(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getArticleAccess().getUnorderedGroup(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getArticleAccess().getGroup_0()); }
						(rule__Article__Group_0__0)
						{ after(grammarAccess.getArticleAccess().getGroup_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getArticleAccess().getUnorderedGroup(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getArticleAccess().getUnorderedGroup(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getArticleAccess().getGroup_1()); }
						(rule__Article__Group_1__0)
						{ after(grammarAccess.getArticleAccess().getGroup_1()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getArticleAccess().getUnorderedGroup(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getArticleAccess().getUnorderedGroup(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getArticleAccess().getGroup_2()); }
						(rule__Article__Group_2__0)
						{ after(grammarAccess.getArticleAccess().getGroup_2()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getArticleAccess().getUnorderedGroup(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getArticleAccess().getUnorderedGroup(), 3);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getArticleAccess().getGroup_3()); }
						(rule__Article__Group_3__0)
						{ after(grammarAccess.getArticleAccess().getGroup_3()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getArticleAccess().getUnorderedGroup(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getArticleAccess().getUnorderedGroup(), 4);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getArticleAccess().getGroup_4()); }
						(rule__Article__Group_4__0)
						{ after(grammarAccess.getArticleAccess().getGroup_4()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getArticleAccess().getUnorderedGroup(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getArticleAccess().getUnorderedGroup(), 5);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getArticleAccess().getGroup_5()); }
						(rule__Article__Group_5__0)
						{ after(grammarAccess.getArticleAccess().getGroup_5()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getArticleAccess().getUnorderedGroup(), 6)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getArticleAccess().getUnorderedGroup(), 6);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getArticleAccess().getGroup_6()); }
						(rule__Article__Group_6__0)
						{ after(grammarAccess.getArticleAccess().getGroup_6()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getArticleAccess().getUnorderedGroup(), 7)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getArticleAccess().getUnorderedGroup(), 7);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getArticleAccess().getGroup_7()); }
						(rule__Article__Group_7__0)
						{ after(grammarAccess.getArticleAccess().getGroup_7()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getArticleAccess().getUnorderedGroup(), 8)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getArticleAccess().getUnorderedGroup(), 8);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getArticleAccess().getGroup_8()); }
						(rule__Article__Group_8__0)
						{ after(grammarAccess.getArticleAccess().getGroup_8()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getArticleAccess().getUnorderedGroup());
	restoreStackSize(stackSize);
}


rule__Article__UnorderedGroup__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__UnorderedGroup__Impl
	rule__Article__UnorderedGroup__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Article__UnorderedGroup__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__UnorderedGroup__Impl
	rule__Article__UnorderedGroup__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__Article__UnorderedGroup__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__UnorderedGroup__Impl
	rule__Article__UnorderedGroup__3?
;
finally {
	restoreStackSize(stackSize);
}


rule__Article__UnorderedGroup__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__UnorderedGroup__Impl
	rule__Article__UnorderedGroup__4?
;
finally {
	restoreStackSize(stackSize);
}


rule__Article__UnorderedGroup__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__UnorderedGroup__Impl
	rule__Article__UnorderedGroup__5?
;
finally {
	restoreStackSize(stackSize);
}


rule__Article__UnorderedGroup__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__UnorderedGroup__Impl
	rule__Article__UnorderedGroup__6?
;
finally {
	restoreStackSize(stackSize);
}


rule__Article__UnorderedGroup__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__UnorderedGroup__Impl
	rule__Article__UnorderedGroup__7?
;
finally {
	restoreStackSize(stackSize);
}


rule__Article__UnorderedGroup__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__UnorderedGroup__Impl
	rule__Article__UnorderedGroup__8?
;
finally {
	restoreStackSize(stackSize);
}


rule__Article__UnorderedGroup__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Article__UnorderedGroup__Impl
;
finally {
	restoreStackSize(stackSize);
}




















rule__Model__BibtexEntriesAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getBibtexEntriesBibtexEntryTypesParserRuleCall_0()); }
	ruleBibtexEntryTypes{ after(grammarAccess.getModelAccess().getBibtexEntriesBibtexEntryTypesParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Article__KeyAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getKeyCiteKeyParserRuleCall_0_3_0()); }
	ruleCiteKey{ after(grammarAccess.getArticleAccess().getKeyCiteKeyParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Article__AuthorAssignment_0_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getAuthorAuthorFieldParserRuleCall_0_4_1_0()); }
	ruleAuthorField{ after(grammarAccess.getArticleAccess().getAuthorAuthorFieldParserRuleCall_0_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Article__TitleAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getTitleTitleFieldParserRuleCall_1_1_0()); }
	ruleTitleField{ after(grammarAccess.getArticleAccess().getTitleTitleFieldParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Article__JournalAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getJournalJournalFieldParserRuleCall_2_1_0()); }
	ruleJournalField{ after(grammarAccess.getArticleAccess().getJournalJournalFieldParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Article__YearAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getYearYearFieldParserRuleCall_3_1_0()); }
	ruleYearField{ after(grammarAccess.getArticleAccess().getYearYearFieldParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Article__VolumeAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getVolumeVolumeFieldParserRuleCall_4_1_0()); }
	ruleVolumeField{ after(grammarAccess.getArticleAccess().getVolumeVolumeFieldParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Article__NumberAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getNumberNumberFieldParserRuleCall_5_1_0()); }
	ruleNumberField{ after(grammarAccess.getArticleAccess().getNumberNumberFieldParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Article__PagesAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getPagesPagesFieldParserRuleCall_6_1_0()); }
	rulePagesField{ after(grammarAccess.getArticleAccess().getPagesPagesFieldParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Article__MonthAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getMonthMonthFieldParserRuleCall_7_1_0()); }
	ruleMonthField{ after(grammarAccess.getArticleAccess().getMonthMonthFieldParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Article__NoteAssignment_8_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArticleAccess().getNoteNoteFieldParserRuleCall_8_0_1_0()); }
	ruleNoteField{ after(grammarAccess.getArticleAccess().getNoteNoteFieldParserRuleCall_8_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CiteKey__KeyAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCiteKeyAccess().getKeyIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getCiteKeyAccess().getKeyIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Authors__NamesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuthorsAccess().getNamesFullnameParserRuleCall_0_0()); }
	ruleFullname{ after(grammarAccess.getAuthorsAccess().getNamesFullnameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Authors__NamesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuthorsAccess().getNamesFullnameParserRuleCall_1_1_0()); }
	ruleFullname{ after(grammarAccess.getAuthorsAccess().getNamesFullnameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Fullname__LastnameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullnameAccess().getLastnameIDTerminalRuleCall_0_0_0()); }
	RULE_ID{ after(grammarAccess.getFullnameAccess().getLastnameIDTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Fullname__FirstnameAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullnameAccess().getFirstnameIDTerminalRuleCall_0_2_0()); }
	RULE_ID{ after(grammarAccess.getFullnameAccess().getFirstnameIDTerminalRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Fullname__FirstnameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullnameAccess().getFirstnameIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getFullnameAccess().getFirstnameIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Fullname__LastnameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullnameAccess().getLastnameIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getFullnameAccess().getLastnameIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Fullname__FirstnameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFullnameAccess().getFirstnameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getFullnameAccess().getFirstnameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TitleField__TitleAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTitleFieldAccess().getTitleSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getTitleFieldAccess().getTitleSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JournalField__JournalAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJournalFieldAccess().getJournalSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getJournalFieldAccess().getJournalSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__YearField__YearAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getYearFieldAccess().getYearSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getYearFieldAccess().getYearSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VolumeField__VolumeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVolumeFieldAccess().getVolumeSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getVolumeFieldAccess().getVolumeSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberField__NumberAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberFieldAccess().getNumberSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getNumberFieldAccess().getNumberSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PagesField__PagesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPagesFieldAccess().getPagesSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getPagesFieldAccess().getPagesSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MonthField__MonthAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMonthFieldAccess().getMonthSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getMonthFieldAccess().getMonthSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NoteField__NoteAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNoteFieldAccess().getNoteSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getNoteFieldAccess().getNoteSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


