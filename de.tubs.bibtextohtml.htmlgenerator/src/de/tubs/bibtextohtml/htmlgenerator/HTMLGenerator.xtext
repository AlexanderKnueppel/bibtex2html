grammar de.tubs.bibtextohtml.htmlgenerator.HTMLGenerator with org.eclipse.xtext.common.Terminals

generate hTMLGenerator "http://www.tubs.de/bibtextohtml/htmlgenerator/HTMLGenerator"

//import "http://www.tubs.de/bibtextohtml/bibtex/BibTeX" as bibtex

HTMLGeneratorModel:
	(elements+=ModuleDeclaration)* (modulesToRun+=RunModule)*;
	
AbstractElement:
   OptionSet | StylesSet | Import
;

RunModule:
	'run' module = [ModuleDeclaration]
;

ModuleDeclaration:
  'module' name = AllowedName '(' bibtexStyle = BibTexStyle ')' '{'
//  'module' name = AllowedName '{'
    (elements += AbstractElement)*
  '}'
;
 
BibTexStyle:
	{BibTexStyle} ((NUM ?= 'num') | (ALPAHNUM ?= 'alphanum'))?	
;

AllowedName:
  ID ('.' ID)*
;

Import:
  'import' (importBibtex = STRING | importAll?= '*')
;

OptionSet:
	'options' '=' '['
	{OptionSet} (options += Option)*
	']'
;

Option:
	PrefixOption | SortingOption | CategoryOption  //| OutputNameOption | SortByOption
;

PrefixOption:
	 'prefix' ':' prefix = STRING
;

SortingOption:
	'sorting' ':' sortby = SortBy (asc ?= 'asc' | desc ?= 'desc')
;
SortBy:
	author ?= 'author' | title ?= 'title' | year ?= 'year' |  key ?= 'key' //maybe critera = [Field] ??
;

CategoryOption:
	'category' ':' sortby = CategorySortBy (asc ?= 'asc' | desc ?= 'desc') 
;
CategorySortBy:
	author ?= 'author' | year ?= 'year'
;


FontStyles: 
	{FontStyles} ((bold ?= 'bold')? & (italic ?= 'italic')? & (underlined ?= 'underlined')?)
;
FontColor:
	color = ('red' | 'green' | 'blue' | 'black' /* and some more */) 
;
FontColorRGB:
	'rgb' '('red = INT ',' green = INT ',' blue = INT ')'
;

StylesSet:
	'styles' '=' '['
	{StylesSet} (styles += Styles)*
	']'
;

Styles:
	(attributeType = AttributeSet | wildcard?='*') '{' 
		("font-styles" ":"  fontStyles = (FontStyles) ";")? 
		& ("font-color" ":" fontColor= (FontColor | FontColorRGB) ";")? 
		& ("font-family" ":" fontFamily = STRING ";")? 
	'}' 
;

AttributeSet:
	"author" | "title" | "year" | "location" | "category"
;

									  