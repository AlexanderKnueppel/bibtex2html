/**
 */
package uebung1Aufgabe3.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import uebung1Aufgabe3.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class Uebung1Aufgabe3FactoryImpl extends EFactoryImpl implements Uebung1Aufgabe3Factory {
	/**
	 * Creates the default factory implementation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static Uebung1Aufgabe3Factory init() {
		try {
			Uebung1Aufgabe3Factory theUebung1Aufgabe3Factory = (Uebung1Aufgabe3Factory)EPackage.Registry.INSTANCE.getEFactory(Uebung1Aufgabe3Package.eNS_URI);
			if (theUebung1Aufgabe3Factory != null) {
				return theUebung1Aufgabe3Factory;
			}
		}
		catch (Exception exception) {
			EcorePlugin.INSTANCE.log(exception);
		}
		return new Uebung1Aufgabe3FactoryImpl();
	}

	/**
	 * Creates an instance of the factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Uebung1Aufgabe3FactoryImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public EObject create(EClass eClass) {
		switch (eClass.getClassifierID()) {
			case Uebung1Aufgabe3Package.UNIVERSITAET: return createUniversitaet();
			case Uebung1Aufgabe3Package.VORLESUNG: return createVorlesung();
			case Uebung1Aufgabe3Package.DOZENT: return createDozent();
			case Uebung1Aufgabe3Package.STUDENT: return createStudent();
			case Uebung1Aufgabe3Package.PERSON: return createPerson();
			default:
				throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
		}
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Universitaet createUniversitaet() {
		UniversitaetImpl universitaet = new UniversitaetImpl();
		return universitaet;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Vorlesung createVorlesung() {
		VorlesungImpl vorlesung = new VorlesungImpl();
		return vorlesung;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Dozent createDozent() {
		DozentImpl dozent = new DozentImpl();
		return dozent;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Student createStudent() {
		StudentImpl student = new StudentImpl();
		return student;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Person createPerson() {
		PersonImpl person = new PersonImpl();
		return person;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Uebung1Aufgabe3Package getUebung1Aufgabe3Package() {
		return (Uebung1Aufgabe3Package)getEPackage();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @deprecated
	 * @generated
	 */
	@Deprecated
	public static Uebung1Aufgabe3Package getPackage() {
		return Uebung1Aufgabe3Package.eINSTANCE;
	}

} //Uebung1Aufgabe3FactoryImpl
