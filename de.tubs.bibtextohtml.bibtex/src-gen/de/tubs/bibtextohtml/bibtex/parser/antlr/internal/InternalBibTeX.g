/*
* generated by Xtext
*/
grammar InternalBibTeX;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package de.tubs.bibtextohtml.bibtex.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.tubs.bibtextohtml.bibtex.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.tubs.bibtextohtml.bibtex.services.BibTeXGrammarAccess;

}

@parser::members {

 	private BibTeXGrammarAccess grammarAccess;
 	
    public InternalBibTeXParser(TokenStream input, BibTeXGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected BibTeXGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getBibtexEntriesBibtexEntryTypesParserRuleCall_0()); 
	    }
		lv_BibtexEntries_0_0=ruleBibtexEntryTypes		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"BibtexEntries",
        		lv_BibtexEntries_0_0, 
        		"BibtexEntryTypes");
	        afterParserOrEnumRuleCall();
	    }

)
)*
;





// Entry rule entryRuleBibtexEntryTypes
entryRuleBibtexEntryTypes returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBibtexEntryTypesRule()); }
	 iv_ruleBibtexEntryTypes=ruleBibtexEntryTypes 
	 { $current=$iv_ruleBibtexEntryTypes.current; } 
	 EOF 
;

// Rule BibtexEntryTypes
ruleBibtexEntryTypes returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getBibtexEntryTypesAccess().getArticleParserRuleCall()); 
    }
    this_Article_0=ruleArticle
    { 
        $current = $this_Article_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleArticle
entryRuleArticle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArticleRule()); }
	 iv_ruleArticle=ruleArticle 
	 { $current=$iv_ruleArticle.current; } 
	 EOF 
;

// Rule Article
ruleArticle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getArticleAccess().getUnorderedGroup());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getArticleAccess().getUnorderedGroup(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getArticleAccess().getUnorderedGroup(), 0);
	 				}
					({true}?=>(	otherlv_1='@' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArticleAccess().getCommercialAtKeyword_0_0());
    }
(	otherlv_2='ARTICLE' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getArticleAccess().getARTICLEKeyword_0_1_0());
    }

    |	otherlv_3='Article' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getArticleAccess().getArticleKeyword_0_1_1());
    }

    |	otherlv_4='article' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getArticleAccess().getArticleKeyword_0_1_2());
    }
)	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getArticleAccess().getLeftCurlyBracketKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArticleAccess().getKeyCiteKeyParserRuleCall_0_3_0()); 
	    }
		lv_key_6_0=ruleCiteKey		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArticleRule());
	        }
       		set(
       			$current, 
       			"key",
        		lv_key_6_0, 
        		"CiteKey");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getArticleAccess().getCommaKeyword_0_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArticleAccess().getAuthorAuthorFieldParserRuleCall_0_4_1_0()); 
	    }
		lv_author_8_0=ruleAuthorField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArticleRule());
	        }
       		set(
       			$current, 
       			"author",
        		lv_author_8_0, 
        		"AuthorField");
	        afterParserOrEnumRuleCall();
	    }

)
))))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getArticleAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getArticleAccess().getUnorderedGroup(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getArticleAccess().getUnorderedGroup(), 1);
	 				}
					({true}?=>(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getArticleAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArticleAccess().getTitleTitleFieldParserRuleCall_1_1_0()); 
	    }
		lv_title_10_0=ruleTitleField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArticleRule());
	        }
       		set(
       			$current, 
       			"title",
        		lv_title_10_0, 
        		"TitleField");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getArticleAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getArticleAccess().getUnorderedGroup(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getArticleAccess().getUnorderedGroup(), 2);
	 				}
					({true}?=>(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getArticleAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArticleAccess().getJournalJournalFieldParserRuleCall_2_1_0()); 
	    }
		lv_journal_12_0=ruleJournalField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArticleRule());
	        }
       		set(
       			$current, 
       			"journal",
        		lv_journal_12_0, 
        		"JournalField");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getArticleAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getArticleAccess().getUnorderedGroup(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getArticleAccess().getUnorderedGroup(), 3);
	 				}
					({true}?=>(	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getArticleAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArticleAccess().getYearYearFieldParserRuleCall_3_1_0()); 
	    }
		lv_year_14_0=ruleYearField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArticleRule());
	        }
       		set(
       			$current, 
       			"year",
        		lv_year_14_0, 
        		"YearField");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getArticleAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getArticleAccess().getUnorderedGroup(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getArticleAccess().getUnorderedGroup(), 4);
	 				}
					({true}?=>(	otherlv_15=',' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getArticleAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArticleAccess().getVolumeVolumeFieldParserRuleCall_4_1_0()); 
	    }
		lv_volume_16_0=ruleVolumeField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArticleRule());
	        }
       		set(
       			$current, 
       			"volume",
        		lv_volume_16_0, 
        		"VolumeField");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getArticleAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getArticleAccess().getUnorderedGroup(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getArticleAccess().getUnorderedGroup(), 5);
	 				}
					({true}?=>(	otherlv_17=',' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getArticleAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArticleAccess().getNumberNumberFieldParserRuleCall_5_1_0()); 
	    }
		lv_number_18_0=ruleNumberField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArticleRule());
	        }
       		set(
       			$current, 
       			"number",
        		lv_number_18_0, 
        		"NumberField");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getArticleAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getArticleAccess().getUnorderedGroup(), 6)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getArticleAccess().getUnorderedGroup(), 6);
	 				}
					({true}?=>(	otherlv_19=',' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getArticleAccess().getCommaKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArticleAccess().getPagesPagesFieldParserRuleCall_6_1_0()); 
	    }
		lv_pages_20_0=rulePagesField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArticleRule());
	        }
       		set(
       			$current, 
       			"pages",
        		lv_pages_20_0, 
        		"PagesField");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getArticleAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getArticleAccess().getUnorderedGroup(), 7)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getArticleAccess().getUnorderedGroup(), 7);
	 				}
					({true}?=>(	otherlv_21=',' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getArticleAccess().getCommaKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArticleAccess().getMonthMonthFieldParserRuleCall_7_1_0()); 
	    }
		lv_month_22_0=ruleMonthField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArticleRule());
	        }
       		set(
       			$current, 
       			"month",
        		lv_month_22_0, 
        		"MonthField");
	        afterParserOrEnumRuleCall();
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getArticleAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getArticleAccess().getUnorderedGroup(), 8)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getArticleAccess().getUnorderedGroup(), 8);
	 				}
					({true}?=>((	otherlv_23=',' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getArticleAccess().getCommaKeyword_8_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArticleAccess().getNoteNoteFieldParserRuleCall_8_0_1_0()); 
	    }
		lv_note_24_0=ruleNoteField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArticleRule());
	        }
       		set(
       			$current, 
       			"note",
        		lv_note_24_0, 
        		"NoteField");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_25='}' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getArticleAccess().getRightCurlyBracketKeyword_8_1());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getArticleAccess().getUnorderedGroup());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getArticleAccess().getUnorderedGroup())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getArticleAccess().getUnorderedGroup());
	}

)
;





// Entry rule entryRuleCiteKey
entryRuleCiteKey returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCiteKeyRule()); }
	 iv_ruleCiteKey=ruleCiteKey 
	 { $current=$iv_ruleCiteKey.current; } 
	 EOF 
;

// Rule CiteKey
ruleCiteKey returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_key_0_0=RULE_ID
		{
			newLeafNode(lv_key_0_0, grammarAccess.getCiteKeyAccess().getKeyIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCiteKeyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"key",
        		lv_key_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleAuthorField
entryRuleAuthorField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAuthorFieldRule()); }
	 iv_ruleAuthorField=ruleAuthorField 
	 { $current=$iv_ruleAuthorField.current; } 
	 EOF 
;

// Rule AuthorField
ruleAuthorField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='author = ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAuthorFieldAccess().getAuthorKeyword_0());
    }
((	otherlv_1='"' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAuthorFieldAccess().getQuotationMarkKeyword_1_0_0());
    }

    { 
        newCompositeNode(grammarAccess.getAuthorFieldAccess().getAuthorsParserRuleCall_1_0_1()); 
    }
    this_Authors_2=ruleAuthors
    { 
        $current = $this_Authors_2.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_3='"' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAuthorFieldAccess().getQuotationMarkKeyword_1_0_2());
    }
)
    |(	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAuthorFieldAccess().getLeftCurlyBracketKeyword_1_1_0());
    }

    { 
        newCompositeNode(grammarAccess.getAuthorFieldAccess().getAuthorsParserRuleCall_1_1_1()); 
    }
    this_Authors_5=ruleAuthors
    { 
        $current = $this_Authors_5.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAuthorFieldAccess().getRightCurlyBracketKeyword_1_1_2());
    }
)))
;





// Entry rule entryRuleAuthors
entryRuleAuthors returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAuthorsRule()); }
	 iv_ruleAuthors=ruleAuthors 
	 { $current=$iv_ruleAuthors.current; } 
	 EOF 
;

// Rule Authors
ruleAuthors returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAuthorsAccess().getNamesFullnameParserRuleCall_0_0()); 
	    }
		lv_names_0_0=ruleFullname		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAuthorsRule());
	        }
       		add(
       			$current, 
       			"names",
        		lv_names_0_0, 
        		"Fullname");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='and' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAuthorsAccess().getAndKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAuthorsAccess().getNamesFullnameParserRuleCall_1_1_0()); 
	    }
		lv_names_2_0=ruleFullname		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAuthorsRule());
	        }
       		add(
       			$current, 
       			"names",
        		lv_names_2_0, 
        		"Fullname");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleFullname
entryRuleFullname returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFullnameRule()); }
	 iv_ruleFullname=ruleFullname 
	 { $current=$iv_ruleFullname.current; } 
	 EOF 
;

// Rule Fullname
ruleFullname returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_lastname_0_0=RULE_ID
		{
			newLeafNode(lv_lastname_0_0, grammarAccess.getFullnameAccess().getLastnameIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFullnameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lastname",
        		lv_lastname_0_0, 
        		"ID");
	    }

)
)	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFullnameAccess().getCommaKeyword_0_1());
    }
(
(
		lv_firstname_2_0=RULE_ID
		{
			newLeafNode(lv_firstname_2_0, grammarAccess.getFullnameAccess().getFirstnameIDTerminalRuleCall_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFullnameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"firstname",
        		lv_firstname_2_0, 
        		"ID");
	    }

)
))
    |((
(
		lv_firstname_3_0=RULE_ID
		{
			newLeafNode(lv_firstname_3_0, grammarAccess.getFullnameAccess().getFirstnameIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFullnameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"firstname",
        		lv_firstname_3_0, 
        		"ID");
	    }

)
)(
(
		lv_lastname_4_0=RULE_ID
		{
			newLeafNode(lv_lastname_4_0, grammarAccess.getFullnameAccess().getLastnameIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFullnameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lastname",
        		lv_lastname_4_0, 
        		"ID");
	    }

)
))
    |(
(
		lv_firstname_5_0=RULE_ID
		{
			newLeafNode(lv_firstname_5_0, grammarAccess.getFullnameAccess().getFirstnameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFullnameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"firstname",
        		lv_firstname_5_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleTitleField
entryRuleTitleField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTitleFieldRule()); }
	 iv_ruleTitleField=ruleTitleField 
	 { $current=$iv_ruleTitleField.current; } 
	 EOF 
;

// Rule TitleField
ruleTitleField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='title = ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTitleFieldAccess().getTitleKeyword_0());
    }
(
(
		lv_title_1_0=RULE_STRING
		{
			newLeafNode(lv_title_1_0, grammarAccess.getTitleFieldAccess().getTitleSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTitleFieldRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"title",
        		lv_title_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleJournalField
entryRuleJournalField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJournalFieldRule()); }
	 iv_ruleJournalField=ruleJournalField 
	 { $current=$iv_ruleJournalField.current; } 
	 EOF 
;

// Rule JournalField
ruleJournalField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='journal = ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJournalFieldAccess().getJournalKeyword_0());
    }
(
(
		lv_journal_1_0=RULE_STRING
		{
			newLeafNode(lv_journal_1_0, grammarAccess.getJournalFieldAccess().getJournalSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJournalFieldRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"journal",
        		lv_journal_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleYearField
entryRuleYearField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getYearFieldRule()); }
	 iv_ruleYearField=ruleYearField 
	 { $current=$iv_ruleYearField.current; } 
	 EOF 
;

// Rule YearField
ruleYearField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='year = ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getYearFieldAccess().getYearKeyword_0());
    }
(
(
		lv_year_1_0=RULE_STRING
		{
			newLeafNode(lv_year_1_0, grammarAccess.getYearFieldAccess().getYearSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getYearFieldRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"year",
        		lv_year_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleVolumeField
entryRuleVolumeField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVolumeFieldRule()); }
	 iv_ruleVolumeField=ruleVolumeField 
	 { $current=$iv_ruleVolumeField.current; } 
	 EOF 
;

// Rule VolumeField
ruleVolumeField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='volume = ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getVolumeFieldAccess().getVolumeKeyword_0());
    }
(
(
		lv_volume_1_0=RULE_STRING
		{
			newLeafNode(lv_volume_1_0, grammarAccess.getVolumeFieldAccess().getVolumeSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVolumeFieldRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"volume",
        		lv_volume_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleNumberField
entryRuleNumberField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumberFieldRule()); }
	 iv_ruleNumberField=ruleNumberField 
	 { $current=$iv_ruleNumberField.current; } 
	 EOF 
;

// Rule NumberField
ruleNumberField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='number = ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNumberFieldAccess().getNumberKeyword_0());
    }
(
(
		lv_number_1_0=RULE_STRING
		{
			newLeafNode(lv_number_1_0, grammarAccess.getNumberFieldAccess().getNumberSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumberFieldRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"number",
        		lv_number_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRulePagesField
entryRulePagesField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPagesFieldRule()); }
	 iv_rulePagesField=rulePagesField 
	 { $current=$iv_rulePagesField.current; } 
	 EOF 
;

// Rule PagesField
rulePagesField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='pages = ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPagesFieldAccess().getPagesKeyword_0());
    }
(
(
		lv_pages_1_0=RULE_STRING
		{
			newLeafNode(lv_pages_1_0, grammarAccess.getPagesFieldAccess().getPagesSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPagesFieldRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"pages",
        		lv_pages_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleMonthField
entryRuleMonthField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMonthFieldRule()); }
	 iv_ruleMonthField=ruleMonthField 
	 { $current=$iv_ruleMonthField.current; } 
	 EOF 
;

// Rule MonthField
ruleMonthField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='month = ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMonthFieldAccess().getMonthKeyword_0());
    }
(
(
		lv_month_1_0=RULE_STRING
		{
			newLeafNode(lv_month_1_0, grammarAccess.getMonthFieldAccess().getMonthSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMonthFieldRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"month",
        		lv_month_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleNoteField
entryRuleNoteField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNoteFieldRule()); }
	 iv_ruleNoteField=ruleNoteField 
	 { $current=$iv_ruleNoteField.current; } 
	 EOF 
;

// Rule NoteField
ruleNoteField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='note = ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNoteFieldAccess().getNoteKeyword_0());
    }
(
(
		lv_note_1_0=RULE_STRING
		{
			newLeafNode(lv_note_1_0, grammarAccess.getNoteFieldAccess().getNoteSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNoteFieldRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"note",
        		lv_note_1_0, 
        		"STRING");
	    }

)
))
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


