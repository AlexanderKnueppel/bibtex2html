/*
* generated by Xtext
*/
package de.tubs.bibtextohtml.bibtex.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class BibTeXGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Assignment cBibtexEntriesAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cBibtexEntriesBibtexEntryTypesParserRuleCall_0 = (RuleCall)cBibtexEntriesAssignment.eContents().get(0);
		
		//Model:
		//	BibtexEntries+=BibtexEntryTypes*;
		public ParserRule getRule() { return rule; }

		//BibtexEntries+=BibtexEntryTypes*
		public Assignment getBibtexEntriesAssignment() { return cBibtexEntriesAssignment; }

		//BibtexEntryTypes
		public RuleCall getBibtexEntriesBibtexEntryTypesParserRuleCall_0() { return cBibtexEntriesBibtexEntryTypesParserRuleCall_0; }
	}

	public class BibtexEntryTypesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BibtexEntryTypes");
		private final RuleCall cArticleParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		////terminal COMMENT_SECTION  : !('@' .* '}');
		////Comments:
		////	comment = COMMENT_SECTION
		////;
		//BibtexEntryTypes: // | Inproceeding | Book
		//	Article;
		public ParserRule getRule() { return rule; }

		//// | Inproceeding | Book
		//Article
		public RuleCall getArticleParserRuleCall() { return cArticleParserRuleCall; }
	}

	public class ArticleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Article");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Keyword cCommercialAtKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Alternatives cAlternatives_0_1 = (Alternatives)cGroup_0.eContents().get(1);
		private final Keyword cARTICLEKeyword_0_1_0 = (Keyword)cAlternatives_0_1.eContents().get(0);
		private final Keyword cArticleKeyword_0_1_1 = (Keyword)cAlternatives_0_1.eContents().get(1);
		private final Keyword cArticleKeyword_0_1_2 = (Keyword)cAlternatives_0_1.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cKeyAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cKeyCiteKeyParserRuleCall_0_3_0 = (RuleCall)cKeyAssignment_0_3.eContents().get(0);
		private final Group cGroup_0_4 = (Group)cGroup_0.eContents().get(4);
		private final Keyword cCommaKeyword_0_4_0 = (Keyword)cGroup_0_4.eContents().get(0);
		private final Assignment cAuthorAssignment_0_4_1 = (Assignment)cGroup_0_4.eContents().get(1);
		private final RuleCall cAuthorAuthorFieldParserRuleCall_0_4_1_0 = (RuleCall)cAuthorAssignment_0_4_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cTitleAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cTitleTitleFieldParserRuleCall_1_1_0 = (RuleCall)cTitleAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cJournalAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cJournalJournalFieldParserRuleCall_2_1_0 = (RuleCall)cJournalAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cUnorderedGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cYearAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cYearYearFieldParserRuleCall_3_1_0 = (RuleCall)cYearAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cUnorderedGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cVolumeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cVolumeVolumeFieldParserRuleCall_4_1_0 = (RuleCall)cVolumeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cUnorderedGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNumberAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNumberNumberFieldParserRuleCall_5_1_0 = (RuleCall)cNumberAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cUnorderedGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cPagesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cPagesPagesFieldParserRuleCall_6_1_0 = (RuleCall)cPagesAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cUnorderedGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cMonthAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cMonthMonthFieldParserRuleCall_7_1_0 = (RuleCall)cMonthAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cUnorderedGroup.eContents().get(8);
		private final Group cGroup_8_0 = (Group)cGroup_8.eContents().get(0);
		private final Keyword cCommaKeyword_8_0_0 = (Keyword)cGroup_8_0.eContents().get(0);
		private final Assignment cNoteAssignment_8_0_1 = (Assignment)cGroup_8_0.eContents().get(1);
		private final RuleCall cNoteNoteFieldParserRuleCall_8_0_1_0 = (RuleCall)cNoteAssignment_8_0_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		
		//Article:
		//	"@" ("ARTICLE" | "Article" | "article") //what about case insensitivity? 
		//	"{" key=CiteKey //mandatory
		//	("," author=AuthorField) & "," title=TitleField & "," journal=JournalField & "," year=YearField & (","
		//	volume=VolumeField)? & ("," number=NumberField)? & ("," pages=PagesField)? & ("," month=MonthField)? & (","
		//	note=NoteField)? "}";
		public ParserRule getRule() { return rule; }

		//"@" ("ARTICLE" | "Article" | "article") //what about case insensitivity? 
		//"{" key=CiteKey //mandatory
		//("," author=AuthorField) & "," title=TitleField & "," journal=JournalField & "," year=YearField & (","
		//volume=VolumeField)? & ("," number=NumberField)? & ("," pages=PagesField)? & ("," month=MonthField)? & (","
		//note=NoteField)? "}"
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }

		//"@" ("ARTICLE" | "Article" | "article") //what about case insensitivity? 
		//"{" key=CiteKey //mandatory
		//("," author=AuthorField)
		public Group getGroup_0() { return cGroup_0; }

		//"@"
		public Keyword getCommercialAtKeyword_0_0() { return cCommercialAtKeyword_0_0; }

		//"ARTICLE" | "Article" | "article"
		public Alternatives getAlternatives_0_1() { return cAlternatives_0_1; }

		//"ARTICLE"
		public Keyword getARTICLEKeyword_0_1_0() { return cARTICLEKeyword_0_1_0; }

		//"Article"
		public Keyword getArticleKeyword_0_1_1() { return cArticleKeyword_0_1_1; }

		//"article"
		public Keyword getArticleKeyword_0_1_2() { return cArticleKeyword_0_1_2; }

		////what about case insensitivity? 
		//"{"
		public Keyword getLeftCurlyBracketKeyword_0_2() { return cLeftCurlyBracketKeyword_0_2; }

		//key=CiteKey
		public Assignment getKeyAssignment_0_3() { return cKeyAssignment_0_3; }

		//CiteKey
		public RuleCall getKeyCiteKeyParserRuleCall_0_3_0() { return cKeyCiteKeyParserRuleCall_0_3_0; }

		//"," author=AuthorField
		public Group getGroup_0_4() { return cGroup_0_4; }

		//","
		public Keyword getCommaKeyword_0_4_0() { return cCommaKeyword_0_4_0; }

		//author=AuthorField
		public Assignment getAuthorAssignment_0_4_1() { return cAuthorAssignment_0_4_1; }

		//AuthorField
		public RuleCall getAuthorAuthorFieldParserRuleCall_0_4_1_0() { return cAuthorAuthorFieldParserRuleCall_0_4_1_0; }

		//"," title=TitleField
		public Group getGroup_1() { return cGroup_1; }

		//","
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }

		//title=TitleField
		public Assignment getTitleAssignment_1_1() { return cTitleAssignment_1_1; }

		//TitleField
		public RuleCall getTitleTitleFieldParserRuleCall_1_1_0() { return cTitleTitleFieldParserRuleCall_1_1_0; }

		//"," journal=JournalField
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//journal=JournalField
		public Assignment getJournalAssignment_2_1() { return cJournalAssignment_2_1; }

		//JournalField
		public RuleCall getJournalJournalFieldParserRuleCall_2_1_0() { return cJournalJournalFieldParserRuleCall_2_1_0; }

		//"," year=YearField
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//year=YearField
		public Assignment getYearAssignment_3_1() { return cYearAssignment_3_1; }

		//YearField
		public RuleCall getYearYearFieldParserRuleCall_3_1_0() { return cYearYearFieldParserRuleCall_3_1_0; }

		//("," volume=VolumeField)?
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//volume=VolumeField
		public Assignment getVolumeAssignment_4_1() { return cVolumeAssignment_4_1; }

		//VolumeField
		public RuleCall getVolumeVolumeFieldParserRuleCall_4_1_0() { return cVolumeVolumeFieldParserRuleCall_4_1_0; }

		//("," number=NumberField)?
		public Group getGroup_5() { return cGroup_5; }

		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }

		//number=NumberField
		public Assignment getNumberAssignment_5_1() { return cNumberAssignment_5_1; }

		//NumberField
		public RuleCall getNumberNumberFieldParserRuleCall_5_1_0() { return cNumberNumberFieldParserRuleCall_5_1_0; }

		//("," pages=PagesField)?
		public Group getGroup_6() { return cGroup_6; }

		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }

		//pages=PagesField
		public Assignment getPagesAssignment_6_1() { return cPagesAssignment_6_1; }

		//PagesField
		public RuleCall getPagesPagesFieldParserRuleCall_6_1_0() { return cPagesPagesFieldParserRuleCall_6_1_0; }

		//("," month=MonthField)?
		public Group getGroup_7() { return cGroup_7; }

		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }

		//month=MonthField
		public Assignment getMonthAssignment_7_1() { return cMonthAssignment_7_1; }

		//MonthField
		public RuleCall getMonthMonthFieldParserRuleCall_7_1_0() { return cMonthMonthFieldParserRuleCall_7_1_0; }

		//("," note=NoteField)? "}"
		public Group getGroup_8() { return cGroup_8; }

		//("," note=NoteField)?
		public Group getGroup_8_0() { return cGroup_8_0; }

		//","
		public Keyword getCommaKeyword_8_0_0() { return cCommaKeyword_8_0_0; }

		//note=NoteField
		public Assignment getNoteAssignment_8_0_1() { return cNoteAssignment_8_0_1; }

		//NoteField
		public RuleCall getNoteNoteFieldParserRuleCall_8_0_1_0() { return cNoteNoteFieldParserRuleCall_8_0_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8_1() { return cRightCurlyBracketKeyword_8_1; }
	}

	public class CiteKeyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CiteKey");
		private final Assignment cKeyAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cKeyIDTerminalRuleCall_0 = (RuleCall)cKeyAssignment.eContents().get(0);
		
		//CiteKey:
		//	key=ID;
		public ParserRule getRule() { return rule; }

		//key=ID
		public Assignment getKeyAssignment() { return cKeyAssignment; }

		//ID
		public RuleCall getKeyIDTerminalRuleCall_0() { return cKeyIDTerminalRuleCall_0; }
	}

	public class AuthorFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AuthorField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAuthorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Keyword cQuotationMarkKeyword_1_0_0 = (Keyword)cGroup_1_0.eContents().get(0);
		private final RuleCall cAuthorsParserRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final Keyword cQuotationMarkKeyword_1_0_2 = (Keyword)cGroup_1_0.eContents().get(2);
		private final Group cGroup_1_1 = (Group)cAlternatives_1.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final RuleCall cAuthorsParserRuleCall_1_1_1 = (RuleCall)cGroup_1_1.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_1_1_2 = (Keyword)cGroup_1_1.eContents().get(2);
		
		//AuthorField:
		//	"author = " ("\"" Authors "\"" | "{" Authors "}");
		public ParserRule getRule() { return rule; }

		//"author = " ("\"" Authors "\"" | "{" Authors "}")
		public Group getGroup() { return cGroup; }

		//"author = "
		public Keyword getAuthorKeyword_0() { return cAuthorKeyword_0; }

		//"\"" Authors "\"" | "{" Authors "}"
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//"\"" Authors "\""
		public Group getGroup_1_0() { return cGroup_1_0; }

		//"\""
		public Keyword getQuotationMarkKeyword_1_0_0() { return cQuotationMarkKeyword_1_0_0; }

		//Authors
		public RuleCall getAuthorsParserRuleCall_1_0_1() { return cAuthorsParserRuleCall_1_0_1; }

		//"\""
		public Keyword getQuotationMarkKeyword_1_0_2() { return cQuotationMarkKeyword_1_0_2; }

		//"{" Authors "}"
		public Group getGroup_1_1() { return cGroup_1_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1_1_0() { return cLeftCurlyBracketKeyword_1_1_0; }

		//Authors
		public RuleCall getAuthorsParserRuleCall_1_1_1() { return cAuthorsParserRuleCall_1_1_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_1_1_2() { return cRightCurlyBracketKeyword_1_1_2; }
	}

	public class AuthorsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Authors");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNamesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNamesFullnameParserRuleCall_0_0 = (RuleCall)cNamesAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cAndKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNamesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNamesFullnameParserRuleCall_1_1_0 = (RuleCall)cNamesAssignment_1_1.eContents().get(0);
		
		//Authors:
		//	names+=Fullname ("and" names+=Fullname)*;
		public ParserRule getRule() { return rule; }

		//names+=Fullname ("and" names+=Fullname)*
		public Group getGroup() { return cGroup; }

		//names+=Fullname
		public Assignment getNamesAssignment_0() { return cNamesAssignment_0; }

		//Fullname
		public RuleCall getNamesFullnameParserRuleCall_0_0() { return cNamesFullnameParserRuleCall_0_0; }

		//("and" names+=Fullname)*
		public Group getGroup_1() { return cGroup_1; }

		//"and"
		public Keyword getAndKeyword_1_0() { return cAndKeyword_1_0; }

		//names+=Fullname
		public Assignment getNamesAssignment_1_1() { return cNamesAssignment_1_1; }

		//Fullname
		public RuleCall getNamesFullnameParserRuleCall_1_1_0() { return cNamesFullnameParserRuleCall_1_1_0; }
	}

	public class FullnameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Fullname");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cLastnameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cLastnameIDTerminalRuleCall_0_0_0 = (RuleCall)cLastnameAssignment_0_0.eContents().get(0);
		private final Keyword cCommaKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cFirstnameAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cFirstnameIDTerminalRuleCall_0_2_0 = (RuleCall)cFirstnameAssignment_0_2.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cFirstnameAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cFirstnameIDTerminalRuleCall_1_0_0 = (RuleCall)cFirstnameAssignment_1_0.eContents().get(0);
		private final Assignment cLastnameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cLastnameIDTerminalRuleCall_1_1_0 = (RuleCall)cLastnameAssignment_1_1.eContents().get(0);
		private final Assignment cFirstnameAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cFirstnameIDTerminalRuleCall_2_0 = (RuleCall)cFirstnameAssignment_2.eContents().get(0);
		
		//Fullname:
		//	lastname=ID "," firstname=ID | firstname=ID lastname=ID | firstname=ID;
		public ParserRule getRule() { return rule; }

		//lastname=ID "," firstname=ID | firstname=ID lastname=ID | firstname=ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//lastname=ID "," firstname=ID
		public Group getGroup_0() { return cGroup_0; }

		//lastname=ID
		public Assignment getLastnameAssignment_0_0() { return cLastnameAssignment_0_0; }

		//ID
		public RuleCall getLastnameIDTerminalRuleCall_0_0_0() { return cLastnameIDTerminalRuleCall_0_0_0; }

		//","
		public Keyword getCommaKeyword_0_1() { return cCommaKeyword_0_1; }

		//firstname=ID
		public Assignment getFirstnameAssignment_0_2() { return cFirstnameAssignment_0_2; }

		//ID
		public RuleCall getFirstnameIDTerminalRuleCall_0_2_0() { return cFirstnameIDTerminalRuleCall_0_2_0; }

		//firstname=ID lastname=ID
		public Group getGroup_1() { return cGroup_1; }

		//firstname=ID
		public Assignment getFirstnameAssignment_1_0() { return cFirstnameAssignment_1_0; }

		//ID
		public RuleCall getFirstnameIDTerminalRuleCall_1_0_0() { return cFirstnameIDTerminalRuleCall_1_0_0; }

		//lastname=ID
		public Assignment getLastnameAssignment_1_1() { return cLastnameAssignment_1_1; }

		//ID
		public RuleCall getLastnameIDTerminalRuleCall_1_1_0() { return cLastnameIDTerminalRuleCall_1_1_0; }

		//firstname=ID
		public Assignment getFirstnameAssignment_2() { return cFirstnameAssignment_2; }

		//ID
		public RuleCall getFirstnameIDTerminalRuleCall_2_0() { return cFirstnameIDTerminalRuleCall_2_0; }
	}

	public class TitleFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TitleField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTitleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTitleAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTitleSTRINGTerminalRuleCall_1_0 = (RuleCall)cTitleAssignment_1.eContents().get(0);
		
		//TitleField:
		//	"title = " title=STRING;
		public ParserRule getRule() { return rule; }

		//"title = " title=STRING
		public Group getGroup() { return cGroup; }

		//"title = "
		public Keyword getTitleKeyword_0() { return cTitleKeyword_0; }

		//title=STRING
		public Assignment getTitleAssignment_1() { return cTitleAssignment_1; }

		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_1_0() { return cTitleSTRINGTerminalRuleCall_1_0; }
	}

	public class JournalFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "JournalField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJournalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cJournalAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cJournalSTRINGTerminalRuleCall_1_0 = (RuleCall)cJournalAssignment_1.eContents().get(0);
		
		//JournalField:
		//	"journal = " journal=STRING;
		public ParserRule getRule() { return rule; }

		//"journal = " journal=STRING
		public Group getGroup() { return cGroup; }

		//"journal = "
		public Keyword getJournalKeyword_0() { return cJournalKeyword_0; }

		//journal=STRING
		public Assignment getJournalAssignment_1() { return cJournalAssignment_1; }

		//STRING
		public RuleCall getJournalSTRINGTerminalRuleCall_1_0() { return cJournalSTRINGTerminalRuleCall_1_0; }
	}

	public class YearFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "YearField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cYearKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cYearAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cYearSTRINGTerminalRuleCall_1_0 = (RuleCall)cYearAssignment_1.eContents().get(0);
		
		//YearField:
		//	"year = " year=STRING;
		public ParserRule getRule() { return rule; }

		//"year = " year=STRING
		public Group getGroup() { return cGroup; }

		//"year = "
		public Keyword getYearKeyword_0() { return cYearKeyword_0; }

		//year=STRING
		public Assignment getYearAssignment_1() { return cYearAssignment_1; }

		//STRING
		public RuleCall getYearSTRINGTerminalRuleCall_1_0() { return cYearSTRINGTerminalRuleCall_1_0; }
	}

	public class VolumeFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VolumeField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVolumeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cVolumeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cVolumeSTRINGTerminalRuleCall_1_0 = (RuleCall)cVolumeAssignment_1.eContents().get(0);
		
		//VolumeField:
		//	"volume = " volume=STRING;
		public ParserRule getRule() { return rule; }

		//"volume = " volume=STRING
		public Group getGroup() { return cGroup; }

		//"volume = "
		public Keyword getVolumeKeyword_0() { return cVolumeKeyword_0; }

		//volume=STRING
		public Assignment getVolumeAssignment_1() { return cVolumeAssignment_1; }

		//STRING
		public RuleCall getVolumeSTRINGTerminalRuleCall_1_0() { return cVolumeSTRINGTerminalRuleCall_1_0; }
	}

	public class NumberFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NumberField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNumberKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNumberAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNumberSTRINGTerminalRuleCall_1_0 = (RuleCall)cNumberAssignment_1.eContents().get(0);
		
		//NumberField:
		//	"number = " number=STRING;
		public ParserRule getRule() { return rule; }

		//"number = " number=STRING
		public Group getGroup() { return cGroup; }

		//"number = "
		public Keyword getNumberKeyword_0() { return cNumberKeyword_0; }

		//number=STRING
		public Assignment getNumberAssignment_1() { return cNumberAssignment_1; }

		//STRING
		public RuleCall getNumberSTRINGTerminalRuleCall_1_0() { return cNumberSTRINGTerminalRuleCall_1_0; }
	}

	public class PagesFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PagesField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPagesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPagesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPagesSTRINGTerminalRuleCall_1_0 = (RuleCall)cPagesAssignment_1.eContents().get(0);
		
		//PagesField:
		//	"pages = " pages=STRING;
		public ParserRule getRule() { return rule; }

		//"pages = " pages=STRING
		public Group getGroup() { return cGroup; }

		//"pages = "
		public Keyword getPagesKeyword_0() { return cPagesKeyword_0; }

		//pages=STRING
		public Assignment getPagesAssignment_1() { return cPagesAssignment_1; }

		//STRING
		public RuleCall getPagesSTRINGTerminalRuleCall_1_0() { return cPagesSTRINGTerminalRuleCall_1_0; }
	}

	public class MonthFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MonthField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMonthKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMonthAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMonthSTRINGTerminalRuleCall_1_0 = (RuleCall)cMonthAssignment_1.eContents().get(0);
		
		//MonthField:
		//	"month = " month=STRING;
		public ParserRule getRule() { return rule; }

		//"month = " month=STRING
		public Group getGroup() { return cGroup; }

		//"month = "
		public Keyword getMonthKeyword_0() { return cMonthKeyword_0; }

		//month=STRING
		public Assignment getMonthAssignment_1() { return cMonthAssignment_1; }

		//STRING
		public RuleCall getMonthSTRINGTerminalRuleCall_1_0() { return cMonthSTRINGTerminalRuleCall_1_0; }
	}

	public class NoteFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NoteField");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNoteKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNoteAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNoteSTRINGTerminalRuleCall_1_0 = (RuleCall)cNoteAssignment_1.eContents().get(0);
		
		/// *Inproceeding:;
		//
		//Book:;* / NoteField:
		//	"note = " note=STRING;
		public ParserRule getRule() { return rule; }

		//"note = " note=STRING
		public Group getGroup() { return cGroup; }

		//"note = "
		public Keyword getNoteKeyword_0() { return cNoteKeyword_0; }

		//note=STRING
		public Assignment getNoteAssignment_1() { return cNoteAssignment_1; }

		//STRING
		public RuleCall getNoteSTRINGTerminalRuleCall_1_0() { return cNoteSTRINGTerminalRuleCall_1_0; }
	}
	
	
	private final ModelElements pModel;
	private final BibtexEntryTypesElements pBibtexEntryTypes;
	private final ArticleElements pArticle;
	private final CiteKeyElements pCiteKey;
	private final AuthorFieldElements pAuthorField;
	private final AuthorsElements pAuthors;
	private final FullnameElements pFullname;
	private final TitleFieldElements pTitleField;
	private final JournalFieldElements pJournalField;
	private final YearFieldElements pYearField;
	private final VolumeFieldElements pVolumeField;
	private final NumberFieldElements pNumberField;
	private final PagesFieldElements pPagesField;
	private final MonthFieldElements pMonthField;
	private final NoteFieldElements pNoteField;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public BibTeXGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pBibtexEntryTypes = new BibtexEntryTypesElements();
		this.pArticle = new ArticleElements();
		this.pCiteKey = new CiteKeyElements();
		this.pAuthorField = new AuthorFieldElements();
		this.pAuthors = new AuthorsElements();
		this.pFullname = new FullnameElements();
		this.pTitleField = new TitleFieldElements();
		this.pJournalField = new JournalFieldElements();
		this.pYearField = new YearFieldElements();
		this.pVolumeField = new VolumeFieldElements();
		this.pNumberField = new NumberFieldElements();
		this.pPagesField = new PagesFieldElements();
		this.pMonthField = new MonthFieldElements();
		this.pNoteField = new NoteFieldElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.tubs.bibtextohtml.bibtex.BibTeX".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	BibtexEntries+=BibtexEntryTypes*;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	////terminal COMMENT_SECTION  : !('@' .* '}');
	////Comments:
	////	comment = COMMENT_SECTION
	////;
	//BibtexEntryTypes: // | Inproceeding | Book
	//	Article;
	public BibtexEntryTypesElements getBibtexEntryTypesAccess() {
		return pBibtexEntryTypes;
	}
	
	public ParserRule getBibtexEntryTypesRule() {
		return getBibtexEntryTypesAccess().getRule();
	}

	//Article:
	//	"@" ("ARTICLE" | "Article" | "article") //what about case insensitivity? 
	//	"{" key=CiteKey //mandatory
	//	("," author=AuthorField) & "," title=TitleField & "," journal=JournalField & "," year=YearField & (","
	//	volume=VolumeField)? & ("," number=NumberField)? & ("," pages=PagesField)? & ("," month=MonthField)? & (","
	//	note=NoteField)? "}";
	public ArticleElements getArticleAccess() {
		return pArticle;
	}
	
	public ParserRule getArticleRule() {
		return getArticleAccess().getRule();
	}

	//CiteKey:
	//	key=ID;
	public CiteKeyElements getCiteKeyAccess() {
		return pCiteKey;
	}
	
	public ParserRule getCiteKeyRule() {
		return getCiteKeyAccess().getRule();
	}

	//AuthorField:
	//	"author = " ("\"" Authors "\"" | "{" Authors "}");
	public AuthorFieldElements getAuthorFieldAccess() {
		return pAuthorField;
	}
	
	public ParserRule getAuthorFieldRule() {
		return getAuthorFieldAccess().getRule();
	}

	//Authors:
	//	names+=Fullname ("and" names+=Fullname)*;
	public AuthorsElements getAuthorsAccess() {
		return pAuthors;
	}
	
	public ParserRule getAuthorsRule() {
		return getAuthorsAccess().getRule();
	}

	//Fullname:
	//	lastname=ID "," firstname=ID | firstname=ID lastname=ID | firstname=ID;
	public FullnameElements getFullnameAccess() {
		return pFullname;
	}
	
	public ParserRule getFullnameRule() {
		return getFullnameAccess().getRule();
	}

	//TitleField:
	//	"title = " title=STRING;
	public TitleFieldElements getTitleFieldAccess() {
		return pTitleField;
	}
	
	public ParserRule getTitleFieldRule() {
		return getTitleFieldAccess().getRule();
	}

	//JournalField:
	//	"journal = " journal=STRING;
	public JournalFieldElements getJournalFieldAccess() {
		return pJournalField;
	}
	
	public ParserRule getJournalFieldRule() {
		return getJournalFieldAccess().getRule();
	}

	//YearField:
	//	"year = " year=STRING;
	public YearFieldElements getYearFieldAccess() {
		return pYearField;
	}
	
	public ParserRule getYearFieldRule() {
		return getYearFieldAccess().getRule();
	}

	//VolumeField:
	//	"volume = " volume=STRING;
	public VolumeFieldElements getVolumeFieldAccess() {
		return pVolumeField;
	}
	
	public ParserRule getVolumeFieldRule() {
		return getVolumeFieldAccess().getRule();
	}

	//NumberField:
	//	"number = " number=STRING;
	public NumberFieldElements getNumberFieldAccess() {
		return pNumberField;
	}
	
	public ParserRule getNumberFieldRule() {
		return getNumberFieldAccess().getRule();
	}

	//PagesField:
	//	"pages = " pages=STRING;
	public PagesFieldElements getPagesFieldAccess() {
		return pPagesField;
	}
	
	public ParserRule getPagesFieldRule() {
		return getPagesFieldAccess().getRule();
	}

	//MonthField:
	//	"month = " month=STRING;
	public MonthFieldElements getMonthFieldAccess() {
		return pMonthField;
	}
	
	public ParserRule getMonthFieldRule() {
		return getMonthFieldAccess().getRule();
	}

	/// *Inproceeding:;
	//
	//Book:;* / NoteField:
	//	"note = " note=STRING;
	public NoteFieldElements getNoteFieldAccess() {
		return pNoteField;
	}
	
	public ParserRule getNoteFieldRule() {
		return getNoteFieldAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
