/*
 * generated by Xtext
 */
package de.tubs.bibtextohtml.bibtex.validation
import org.eclipse.xtext.validation.Check
import de.tubs.bibtextohtml.bibtex.bibTeX.UnknownField
import de.tubs.bibtextohtml.bibtex.bibTeX.BibTeXPackage
import de.tubs.bibtextohtml.bibtex.bibTeX.Article
import de.tubs.bibtextohtml.bibtex.bibTeX.AuthorField
import de.tubs.bibtextohtml.bibtex.bibTeX.TitleField

/**
 * Custom validation rules. 
 *
 * see http://www.eclipse.org/Xtext/documentation.html#validation
 */
class BibTeXValidator extends AbstractBibTeXValidator {

//  public static val INVALID_NAME = 'invalidName'
//
//	@Check
//	def checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.name.charAt(0))) {
//			warning('Name should start with a capital', 
//					MyDslPackage.Literals.GREETING__NAME,
//					INVALID_NAME)
//		}
//	}

  public static val UNKNOWN_FIELD = 'UnknownField'
public static val TITLE_FIELD = 'TitleField'
	@Check
	def checkForUnknowns(UnknownField unknown) {
		warning('Field "'+unknown.getType().getType()+'" is unknown or not implemented yet. Hence it will be ignored.', 
				BibTeXPackage.Literals.UNKNOWN_FIELD__TYPE,
				UNKNOWN_FIELD)
	}
	
	@Check
	def checkForMultipleOccurence(Article article) {
		if(article.elements.filter(TitleField).size > 1) {
			warning("Title already defined", 
				BibTeXPackage.Literals.ARTICLE__ELEMENTS)
		} else if(article.elements.filter(TitleField).size == 0 ) {
				error("Missing Title-Attribute", 
				BibTeXPackage.Literals.MODEL__BIBTEX_ENTRIES)
		}
//		warning('Field "'+unknown.getType().getType()+'" is unknown or not implemented yet. Hence it will be ignored.', 
//				BibTeXPackage.Literals.UNKNOWN_FIELD__TYPE,
//				UNKNOWN_FIELD)
	}
}
